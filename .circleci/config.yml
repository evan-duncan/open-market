# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/php:7.1-jessie-node-browsers
    working_directory: ~/repo
    environment:
      CC_TEST_REPORTER_ID: b64a446f1ee4f69317245dd7219a1abe49bc038353b622200b1f49fb5b08839c
    steps:
      - checkout
      - run: sudo apt update && sudo apt install zlib1g-dev libsqlite3-dev
      - run: sudo docker-php-ext-install zip

      # Download and cache dependencies
      # composer cache
      - restore_cache:
          keys:
          # "composer.lock" can be used if it is committed to the repo
          - v1-dependencies-{{ checksum "composer.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: composer install -n --prefer-dist
      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor
      # node cache
      - restore_cache:
          keys:
            - node-v3-{{ checksum "package.json" }}
            - node-v3-
      - run: npm install
      - save_cache:
          key: node-v3-{{ checksum "package.json" }}
          paths:
            - node_modules

      # Lint the php code
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run: composer lint
      # prepare the database
      # - run: touch storage/testing.sqlite
      # - run: php artisan migrate --env=testing --database=sqlite_testing --force
      # Setup project
      - run: sudo cp .env.circleci .env
      - run: sudo php artisan key:generate
      # run tests with phpunit
      - run:
          name: Run tests
          command: |
            sudo docker-php-ext-enable xdebug
            ./cc-test-reporter before-build
            composer test -- --coverage-clover clover.xml --whitelist src/
            ./cc-test-reporter after-build --coverage-input-type clover --exit-code $?

  deploy:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Deploy Master to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /\bv?(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)(?:-[\da-z-]+(?:\.[\da-z-]+)*)?(?:\+[\da-z-]+(?:\.[\da-z-]+)*)?\b/ig
